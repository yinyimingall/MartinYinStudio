{"version":3,"sources":["webpack:///./src/components/style/bio.module.scss","webpack:///./content/assets/martinyinstudio.svg","webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","React","Martinyinstudio","props","createElement","defaultProps","default","Bio","site","siteMetadata","author","social","style","display","marginBottom","rhythm","className","Style","logo","name","summary","target","rel","href","bilibili","youtube","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","margin","maxWidth","padding","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","to","fields","slug"],"mappings":"wpDACAA,EAAOC,QAAU,CAAC,KAAO,4B,qBCDzB,IAAIC,EAAQ,EAAQ,QAEpB,SAASC,EAAiBC,GACtB,OAAOF,EAAMG,cAAc,MAAMD,EAAM,CAACF,EAAMG,cAAc,OAAO,CAAC,IAAM,GAAGH,EAAMG,cAAc,QAAQ,KAAK,8NAAgOH,EAAMG,cAAc,OAAO,CAAC,GAAK,SAAS,UAAY,QAAQ,EAAI,SAAS,EAAI,UAAU,IAAM,GAAG,UAAUH,EAAMG,cAAc,OAAO,CAAC,GAAK,MAAM,UAAY,QAAQ,EAAI,UAAU,EAAI,UAAU,IAAM,GAAG,OAAOH,EAAMG,cAAc,OAAO,CAAC,GAAK,SAAS,UAAY,QAAQ,EAAI,UAAU,EAAI,UAAU,IAAM,GAAG,YAGxoBF,EAAgBG,aAAe,CAAC,MAAQ,OAAO,OAAS,OAAO,QAAU,iBAEzEN,EAAOC,QAAUE,EAEjBA,EAAgBI,QAAUJ,G,gNCqEXK,EAlEH,WACV,IADgB,EACN,OAwBsBC,KAAKC,aAA7BC,EAzBQ,EAyBRA,OAAQC,EAzBA,EAyBAA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,OAiBvB,kBAAC,IAAD,CACEC,UAAWC,IAAMC,OAEnB,oCACOR,EAAOS,KADd,MAEE,2BAAIT,EAAOU,SAFb,UAME,uBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAI,GAAKZ,EAAOa,UAApD,YANF,IAQE,uBAAGH,OAAO,SAASC,IAAI,aAAaC,KAAI,GAAKZ,EAAOc,SAApD,WARF,W,wBCyBOC,GAFEC,UA9EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKpB,KAAKC,aAAayB,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,yBAAK3B,MAAO,CACV4B,OAAO,SACPC,SAAS,QACTC,QAAQ,WAER,iCACE,gCACE,wBACE9B,MAAO,CACL+B,UAAW5B,YAAO,GAClBD,aAAcC,YAAO,MAGtBgB,EAAKM,YAAYH,OAEpB,uBACEtB,MAAK,iBACAgC,aAAM,IADN,CAEH/B,QAAQ,QACRC,aAAcC,YAAO,MAGtBgB,EAAKM,YAAYQ,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQhB,EAAKiB,QACjD,wBACEpC,MAAO,CACLE,aAAcC,YAAO,MAGzB,gCACE,kBAAC,EAAD,QAIJ,6BACE,wBACEH,MAAO,CACLC,QAAQ,OACRoC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVT,QAAS,IAGX,4BACGP,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAASkB,OAAOC,KAAMhC,IAAI,QAApC,KACKa,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAAKiB,OAAOC,KAAMhC,IAAI,QAC7Bc,EAAKC,YAAYH,MADpB,YAcM","file":"component---src-templates-blog-post-js-24ca79b9648f8bf6aaf3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"bio-module--logo--2YT8R\"};","var React = require('react');\n\nfunction Martinyinstudio (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\"\\n      .cls-1, .cls-2, .cls-3 {\\n        font-size: 108.333px;\\n        font-family: \\\"PingFang SC\\\";\\n      }\\n\\n      .cls-2 {\\n        fill: #546bcf;\\n      }\\n\\n      .cls-3 {\\n        fill: #dc4131;\\n      }\\n    \")),React.createElement(\"text\",{\"id\":\"Martin\",\"className\":\"cls-1\",\"x\":\"79.563\",\"y\":\"543.953\",\"key\":1},\"Martin\"),React.createElement(\"text\",{\"id\":\"Yin\",\"className\":\"cls-2\",\"x\":\"419.844\",\"y\":\"545.141\",\"key\":2},\"Yin\"),React.createElement(\"text\",{\"id\":\"Studio\",\"className\":\"cls-3\",\"x\":\"611.031\",\"y\":\"543.039\",\"key\":3},\"Studio\")]);\n}\n\nMartinyinstudio.defaultProps = {\"width\":\"1000\",\"height\":\"1000\",\"viewBox\":\"0 0 1000 1000\"};\n\nmodule.exports = Martinyinstudio;\n\nMartinyinstudio.default = Martinyinstudio;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n// import Image from \"gatsby-image\";\nimport Logosvg from \"../../content/assets/martinyinstudio.svg\"\nimport { rhythm } from \"../utils/typography\";\nimport Style from './style/bio.module.scss'\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-picture.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            bilibili\n            youtube\n          }\n        }\n      }\n    }\n  `);\n\n  const { author, social } = data.site.siteMetadata;\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      {/* <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      /> */}\n\n      <Logosvg\n        className={Style.logo}\n      />\n      <div>\n        文章由 {author.name} 创作\n        <p>{author.summary}</p>\n        {` `}\n        在\n        &nbsp;\n        <a target='_blank' rel='noreferrer' href={`${social.bilibili}`}>bilibili</a>\n        &nbsp;\n        <a target='_blank' rel='noreferrer' href={`${social.youtube}`}>YouTube</a>\n        &nbsp;\n        找到我\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm, scale } from \"../utils/typography\";\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div style={{\n        margin: `0 auto`,\n        maxWidth: `48rem`,\n        padding: `0 1rem`\n      }}>\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: rhythm(0.5),\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}